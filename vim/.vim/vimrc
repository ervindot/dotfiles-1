"                                      .......
"                                  ...............           
"                                ....................        
"                              .........................    
"                             ...........................  
"                            .............................  
"                           ...............................  
"                           ..............x................  
"                           ............xo@................
"                           ...........xoo@xxx.............
"                          ........o@oxxoo@@@@@@x..xx.....
"                           .....xo@oo...o@@@@@@x...o\\./.
"                           ....o@@@@@@@@@@@@@@@@@@@o.\\..
"                           .....x@@@@@@@@@@@o@@@@@@x/.\\.
"                            ......@@@@@@@@@@o@@@@@x....
"                            .......@@@@@@@@o@@@@o......
"                                 .x@@@@@@@@@@ox.. .....
"                                .@@@@@@@ooooxxxo.   ...
"                             ...x@@@@@@@@@ooooo@... ..
"                          ........@@@@@@@....xoo........
"                       .............@@@....................
"                    ........................................
"                    ....................x..x................

"     .o88o.                               o8o                .
"     888 `"                               `"'              .o8
"    o888oo   .oooo.o  .ooooo.   .ooooo.  oooo   .ooooo.  .o888oo oooo    ooo
"     888    d88(  "8 d88' `88b d88' `"Y8 `888  d88' `88b   888    `88.  .8'
"     888    `"Y88b.  888   888 888        888  888ooo888   888     `88..8'
"     888    o.  )88b 888   888 888   .o8  888  888    .o   888 .    `888'
"    o888o   8""888P' `Y8bod8P' `Y8bod8P' o888o `Y8bod8P'   "888"      d8'
"                                                                 .o...P'
"                                                                 `XER0'

" Plugin: minpac (setup)
packadd minpac
call minpac#init()
call minpac#add('k-takata/minpac', {'type': 'opt'})

call minpac#add('airblade/vim-gitgutter')
call minpac#add('ap/vim-css-color')
call minpac#add('ajh17/VimCompletesMe')
call minpac#add('christoomey/vim-tmux-navigator')
call minpac#add('itchyny/lightline.vim')

call minpac#add('justinmk/vim-dirvish')
call minpac#add('justinmk/vim-sneak')

call minpac#add('jiangmiao/auto-pairs')
call minpac#add('junegunn/vim-peekaboo')
call minpac#add('mattn/emmet-vim')
call minpac#add('mike-hearn/base16-vim-lightline')
call minpac#add('mhinz/vim-startify')
call minpac#add('ryanoasis/vim-devicons')

call minpac#add('tpope/vim-fugitive')
call minpac#add('tpope/vim-commentary')
call minpac#add('tpope/vim-surround')
call minpac#add('tpope/vim-repeat')

call minpac#add('w0rp/ale')

" Commands
command! PackUpdate call minpac#update()
command! PackClean call minpac#clean()

" Basic setup
syntax on
let mapleader = ';' " - set leader key
set encoding=UTF-8
set noshowmode
set splitbelow
set splitright
set number
set textwidth=80
set nohls
set noshowmatch
set noshowmode
setlocal spell spelllang=en_us
set nospell
set modeline
set nojoinspaces " pesky 2-spaces after the period thing - substack :p
set guicursor=

" Indent Settings
set autoindent
set indentexpr=off
set expandtab
set tabstop=2
set softtabstop=2
set shiftwidth=2 

" Backup settings
set nowritebackup
set noswapfile
set nobackup

" - Finding files recursively
set path+=**

" Wild stuff and such
set wildmenu
set wildignore+=**/node_modules/**

" Mappings
nmap <silent> <leader>t :exec &rnu? "se rnu!" : "se rnu"<CR>

" Copy selected text to system clipboard (requires vim compiled with x-11)
vnoremap <C-c> "*y :let @+=@*<CR>
map <C-v> "+P

 " - easy buffer navigation
noremap <leader>n :bn<cr>
noremap <leader>p :bp<cr>
noremap <leader>d :bd<cr>
nnoremap <C-p> :<C-u>FZF<CR>

if has('nvim')
  " - avoid term buffers from closing on buf switch
  set hidden
  set termguicolors
  tnoremap <Esc> <C-\><C-n>
  tnoremap <C-v><Esc> <Esc>
  " - easy window navigation - when in term
  tnoremap <C-h> <C-\><C-n><C-w>h
  tnoremap <C-j> <C-\><C-n><C-w>j
  tnoremap <C-k> <C-\><C-n><C-w>k
  tnoremap <C-l> <C-\><C-n><C-w>l

  if executable('nvr')
    let $VISUAL="nvr -cc split --remote-wait +'set bufhidden=wipe'"
  endif
endif

" Resizing Windows
nnoremap <C-up> <C-W>+
nnoremap <C-down> <C-W>-
nnoremap <C-left> <C-W><
nnoremap <C-right> <C-W>>

" Plugin: Dracula
" let g:dracula_colorterm = 0
" let g:dracula_italic = 0

function! s:base16_customize() abort
  call Base16hi("LineNr", g:base16_gui03, g:base16_gui00, g:base16_cterm03, g:base16_cterm00, "", "")
endfunction

augroup on_change_colorschema
  autocmd!
  autocmd ColorScheme * call s:base16_customize()
augroup END

colorscheme base16-ashes

" Plugin: netrw {{{2
let g:loaded_netrwPlugin = 1
let g:dirvish_relative_paths = 0
command! -nargs=? -complete=dir Explore Dirvish <args>
command! -nargs=? -complete=dir Sexplore belowright split | silent Dirvish <args>
command! -nargs=? -complete=dir Vexplore leftabove vsplit | silent Dirvish <args>

" Plugin: GitGutter
set updatetime=1000
nmap <Leader>gs <Plug>GitGutterStageHunk
nmap <Leader>gu <Plug>GitGutterUndoHunk
nmap <Leader>gp <Plug>GitGutterPreviewHunk

" Plugin: Startify
let g:startify_custom_header =
        \ map(split(system('figlet Life is Strange'), '\n'), '"   ". v:val')

let g:startify_files_number = 10

let g:startify_lists = [
      \ { 'type': 'files',     'header': [   'Recent Files']            },
      \ { 'type': 'bookmarks', 'header': [   'Bookmarks']      },
      \ { 'type': 'commands',  'header': [   'Commands']       },
      \ ]

" Plugin: Ale
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 0
let g:ale_linters = {
      \   'javascript': ['eslint']
\}

" let g:ale_fixers = { \   'haskell': ['brittany'] \}

" Plugin: lightline {{{1
let g:lightline = {
      \ 'colorscheme': 'base16_ashes',
      \ 'component': {
      \   'lineinfo': ' %3l:%-2v',
      \ },
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ],
      \   'right': [ [ 'lineinfo' ],
      \              [ 'percent' ],
      \              [ 'fileencoding', 'filetype'] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'LightLineGitBranch'
      \ }
    \ }

function! LightLineGitBranch()
  let l:branch = fugitive#head()
  return l:branch ==# '' ? '' : ' ' . l:branch
endfunction

